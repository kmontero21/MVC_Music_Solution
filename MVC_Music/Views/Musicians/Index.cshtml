@model IEnumerable<MVC_Music.Models.Musician>

@{
    ViewData["Title"] = "Index";
}

<h2>Musician Index</h2>

<p>
    <a asp-action="Create">Create New Musician</a>
    <a asp-action="PerformancesReports" class="btn btn-info float-end">Performances Report</a>
</p>
<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn btn-outline-secondary" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search
        </button>
        <div class="collapse @(ViewData["Filtering"])" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Select by Primary Instrument:</label>
                        @Html.DropDownList("InstrumentID", null, "All Instruments", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label">Filter by Other Instrument:</label>
                        @Html.DropDownList("OtherInstrumentID", null, "None", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Search Phone Number:</label>
                            @Html.TextBox("SearchPhone", null, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Search Musician Name:</label>
                        @Html.TextBox("SearchName", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    <input type="submit" name="actionButton" value="Musician" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Phone" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Age" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Instruments" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" disabled="disabled" value="Documents" class="btn btn-link" />
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @{
                            if (item.MusicianThumbnail?.Content != null)
                            {
                                string imageBase64 = Convert.ToBase64String(item.MusicianThumbnail.Content);
                                string imageSrc = string.Format("data:" + item.MusicianThumbnail.MimeType + ";base64,{0}", imageBase64);
                                <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" class="img-fluid rounded" />
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneFormatted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        Primary: @Html.DisplayFor(modelItem => item.Instrument.Name)<br/>
                        @{
                            int playCount = item.Plays.Count;
                            if (playCount > 0)
                            {
                                string firstPlay = item.Plays.FirstOrDefault().Instrument.Name;
                                if (playCount > 1)
                                {
                                    string playList = "";
                                    var c = item.Plays.ToList();
                                    for (int i = 1; i < playCount; i++)//Skip the first because we have it already
                                    {
                                        playList += c[i].Instrument.Name + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseHistory@(item.ID)"
                                        aria-expanded="false" aria-controls="collapseHistory@(item.ID)">
                                        @firstPlay <span class="badge bg-info">@playCount</span>
                                    </a>
                                    <div class="collapse" id="collapseHistory@(item.ID)">
                                        @Html.Raw(playList)
                                    </div>
                                }
                                else
                                {
                                    @firstPlay
                                }
                            }
                        }
                    </td>
                    <td>
                        @{
                            int fileCount = item.MusicianDocuments.Count;
                            if (fileCount > 0)
                            {
                                var firstFile = item.MusicianDocuments.FirstOrDefault(); ;
                                if (fileCount > 1)
                                {
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseDocs@(item.ID)" 
                                    aria-expanded="false" aria-controls="collapseDocs@(item.ID)">
                                        Uploaded Files <span class="badge bg-info">@fileCount</span>
                                    </a>
                                    <div class="collapse" id="collapseDocs@(item.ID)">
                                        @{
                                            foreach (var d in item.MusicianDocuments)
                                            {
                                                <a asp-action="Download" asp-route-id="@d.ID">@d.FileName</a> <br />
                                            }
                                        }
                                    </div>
                                }
                                else
                                {
                                    <a asp-action="Download" asp-route-id="@firstFile.ID">@firstFile.FileName</a>
                                }
                            }
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>
